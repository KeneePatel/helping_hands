name: Terraform Setup for Azure

on:
  workflow_dispatch:
    description: "Trigger workflow to set up Azure environment with Terraform"

jobs:
  setup:
    name: Set Up Azure Environment
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Authenticate to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Up SSH Keys
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa
        chmod 644 ~/.ssh/id_rsa.pub

    - name: Extract Public Key
      id: ssh-key
      run: echo "::set-output name=public_key::$(cat ~/.ssh/id_rsa.pub)"

    - name: Initialize Terraform
      run: terraform init
      working-directory: terraform

    - name: Apply Terraform Plan
      run: terraform apply -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var="public_key=${{ steps.ssh-key.outputs.public_key }}" -auto-approve
      working-directory: terraform

    - name: Extract ACR Credentials
      id: acr-credentials
      run: |
        echo "acr_username=$(terraform output -raw acr_username)" >> $GITHUB_ENV
        echo "acr_password=$(terraform output -raw acr_password)" >> $GITHUB_ENV
      working-directory: terraform

    - name: Extract VM Public IP
      id: vm-ip
      run: |
        echo "vm_ip=$(terraform output -raw frontend_backend_public_ip)" >> $GITHUB_ENV
      working-directory: terraform

    - name: Authenticate with GitHub CLI
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set GitHub Secrets for ACR Credentials and VM IP
      run: |
        gh secret set ACR_USERNAME -b"${{ env.acr_username }}"
        gh secret set ACR_PASSWORD -b"${{ env.acr_password }}"
        gh secret set VM_PUBLIC_IP -b"${{ env.vm_ip }}"

